@using Harmoni.UI.DTOs
@using Harmoni.UI.DTOs.Speaker
@using X.PagedList
@using X.PagedList.Mvc.Core
@{
    ViewData["ActionName"] = "Archive";
}
@model IPagedList<SpeakerGetDTO>
<div class="page-body">
    <!-- Container-fluid starts-->
    <div class="container-fluid basic_table">
        <div class="row">
            <div class="col-sm-12">
                <div class="card">
                    <div class="card-header">
                        <h4>Basic Table With Border Bottom Color</h4><span>Use a class<code>table</code> to any table, and <code>.border-bottom-*</code>class for Border bottom color</span>
                    </div>
                    <div>
                        <a asp-action="index" asp-controller="speaker" type="button" class="btn btn-outline-dark">Back</a>
                    </div>
                    <div class="table-responsive custom-scrollbar">
                        <table class="table">
                            <thead>
                                <tr class="border-bottom-primary">
                                    <th scope="col">@Html.DisplayNameFor(x => x.Single().Id)</th>
                                    <th scope="col">@Html.DisplayNameFor(x => x.Single().Name)</th>
                                    <th scope="col">@Html.DisplayNameFor(x => x.Single().Description)</th>
                                    <th scope="col">@Html.DisplayNameFor(x => x.Single().Experience)</th>
                                    <th scope="col">@Html.DisplayNameFor(x => x.Single().ImageUrl)</th>
                                    <th scope="col">Social Meadias</th>
                                    <th scope="col">Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    <tr class="border-bottom-secondary">
                                        <th scope="row">@item.Id</th>
                                        <td>@item.Name</td>
                                        <td>@item.Description</td>
                                        <td>@item.Experience</td>
                                        <td><img style="width: 70px;" src="~/uploads/speakers/@item.ImageUrl" /></td>
                                        <td>
                                            @if (item.FacebookUrl is not null)
                                            {
                                                <a href="@item.FacebookUrl"><i class="fab fa-facebook-f"></i></a>
                                            }
                                            else if (item.XUrl is not null)
                                            {
                                                <a href="@item.XUrl"><i class="fab fa-twitter"></i></a>

                                            }
                                            else if (item.TwitchUrl is not null)
                                            {
                                                <a href="@item.TwitchUrl"><i class="fab fa-twitch"></i></a>
                                            }
                                            else if (item.InstagramUrl is not null)
                                            {
                                                <a href="@item.InstagramUrl"><i class="fab fa-instagram"></i></a>
                                            }


                                        </td>
                                        <td>
                                            <a type="button" asp-action="Update" asp-controller="speaker" asp-route-id="@item.Id" class="btn btn-outline-warning">Update</a>
                                            <a type="button" asp-action="HardDelete" asp-controller="speaker" asp-route-id="@item.Id" class="btn btn-outline-danger">Delete</a>
                                            <a type="button" asp-action="recover" asp-controller="speaker" asp-route-id="@item.Id" class="btn btn-outline-success">Recover</a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- Container-fluid Ends-->
    @Html.Partial("_CustomPager", Model)

    @*  @Html.PagedListPager(Model, page => Url.Action("Index", new { pageIndex = page, pageSize = Model.PageSize })) *@
</div>