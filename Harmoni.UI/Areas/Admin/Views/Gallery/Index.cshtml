
@using Harmoni.UI.DTOs.Gallery
@using X.PagedList
@using X.PagedList.Mvc.Core

@model IPagedList<GalleryGetDTO>

<div class="page-body">
    <!-- Container-fluid starts-->
    <div class="container-fluid basic_table">
        <div class="row">
            <div class="col-sm-12">
                <div class="card">
                    <div class="card-header">
                        <h4>Basic Table With Border Bottom Color</h4><span>Use a class<code>table</code> to any table, and <code>.border-bottom-*</code>class for Border bottom color</span>
                    </div>
                    <div>
                        <a asp-action="create" asp-controller="gallery" type="button" class="btn btn-outline-success">Create</a>
                        <a asp-action="Archive" asp-controller="gallery" type="button" class="btn btn-outline-dark">View Archives</a>
                    </div>
                    <div class="table-responsive custom-scrollbar">
                        <table class="table">
                            <thead>
                                <tr class="border-bottom-primary">
                                    <th scope="col">@Html.DisplayNameFor(x => x.Single().Id)</th>
                                    <th scope="col">@Html.DisplayNameFor(x => x.Single().Title)</th>
                                    <th scope="col">@Html.DisplayNameFor(x => x.Single().FestivalName)</th>
                                    <th scope="col">@Html.DisplayNameFor(x => x.Single().Date)</th>
                                    <th scope="col">@Html.DisplayNameFor(x => x.Single().Url)</th>
                                    <th scope="col">Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    <tr class="border-bottom-secondary">
                                        <th scope="row">@item.Id</th>
                                        <td>@item.Title</td>
                                        <td>@item.FestivalName</td>
                                        <td>@item.Date</td>
                                        <td>
                                            @if (item.Url.Contains(".mp4"))
                                            {
                                                <video style="width: 70px;" src="~/uploads/gallery/video/@item.Url" />
                                            }
                                            else
                                            {
                                                <img style="width: 70px;" src="~/uploads/gallery/photo/@item.Url" />
                                            }

                                        </td>
                                        <td>
                                            <a type="button" asp-action="Update" asp-controller="gallery" asp-route-id="@item.Id" class="btn btn-outline-warning">Update</a>
                                            <a type="button" asp-action="Delete" asp-controller="gallery" asp-route-id="@item.Id" class="btn btn-outline-danger">Delete</a>
                                            <a type="button" asp-action="SoftDelete" asp-controller="gallery" asp-route-id="@item.Id" class="btn btn-outline-danger">Archive</a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- Container-fluid Ends-->
    @Html.Partial("_CustomPager", Model)

    @*  @Html.PagedListPager(Model, page => Url.Action("Index", new { pageIndex = page, pageSize = Model.PageSize })) *@
</div>